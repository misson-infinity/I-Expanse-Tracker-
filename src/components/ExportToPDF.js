import jsPDF from 'jspdf';
import 'jspdf-autotable';
import logo from '../assets/image (4).png';
import devPhoto from '../assets/Picsart_24-12-22_22-58-18-749.png';
const ExportToPDF = ({ transactions, userName, userTitle }) => {
    const handleExport = () => {
        const doc = new jsPDF();
        try {
            doc.addImage(logo, 'PNG', 15, 10, 20, 20);
            doc.addImage(devPhoto, 'PNG', 150, 8, 25, 25, 'dev_photo', 'NONE', 0);
        } catch (e) { console.error("Error adding images to PDF:", e); }
        doc.setFontSize(20); doc.text("I Expense Tracker - Financial Report", 40, 22);
        doc.setFontSize(12); doc.text(userName, 180, 18);
        doc.setFontSize(10); doc.text(userTitle, 180, 24, { maxWidth: 50, align: 'right' });
        doc.text(`Report Date: ${new Date().toLocaleDateString()}`, 180, 30);
        doc.autoTable({ startY: 45, head: [['Date', 'Description', 'Category', 'Type', 'Amount (BDT)']], body: transactions.map(t => [new Date(t.date).toLocaleDateString(), t.description, t.category, t.type, t.amount.toFixed(2)]) });
        const pageCount = doc.internal.getNumberOfPages();
        for (let i = 1; i <= pageCount; i++) {
            doc.setPage(i); doc.text(`Page ${i} of ${pageCount}`, 15, doc.internal.pageSize.height - 10);
            doc.text("Generated by I Expense Tracker ♾️", doc.internal.pageSize.width - 60, doc.internal.pageSize.height - 10);
        }
        doc.save('I-Expense-Report.pdf');
    };
    return <button onClick={handleExport}>Export Report to PDF</button>;
};
export default ExportToPDF;